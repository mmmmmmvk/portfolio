/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 public/models/wordmark.gltf 
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF, PerspectiveCamera, MeshTransmissionMaterial } from '@react-three/drei'
import { useControls, Leva } from 'leva'
import { useThree } from '@react-three/fiber'

export function Wordmark(props) {

    const config = useControls({
        meshPhysicalMaterial: false,
        transmissionSampler: false,
        backside: true,
        samples: { value: 10, min: 1, max: 32, step: 1 },
        resolution: { value: 2048, min: 256, max: 2048, step: 256 },
        transmission: { value: 1, min: 0, max: 1 },
        roughness: { value: 0.45, min: 0, max: 1, step: 0.01 },
        thickness: { value: 10, min: 0, max: 10, step: 0.01 },
        ior: { value: 1, min: 1, max: 5, step: 0.01 },
        chromaticAberration: { value: 0.01, min: 0, max: 1 },
        anisotropy: { value: 1, min: 0, max: 1, step: 0.01 },
        distortion: { value: 1, min: 0, max: 1, step: 0.01 },
        distortionScale: { value: 0.18, min: 0.01, max: 1, step: 0.01 },
        clearcoat: { value: 0.08, min: 0, max: 1 },
        reflectivity: { value: 0.02, min: 0, max: 1 },
        attenuationColor: '#ffffff',
        color: '#ffffff',
        bg: '#000000',
    })

  const { nodes, materials } = useGLTF('./models/wordmark.gltf')
  const { viewport } = useThree()
  return (
    <>
    <Leva hidden />
    <group className="wordmark"  {...props} dispose={null} scale={viewport.width+280 / viewport.height}>
      <mesh geometry={nodes['Voronoi-Bruch'].geometry} >
      {config.meshPhysicalMaterial ? <meshPhysicalMaterial {...config} /> : <MeshTransmissionMaterial background={new THREE.Color(config.bg)} {...config} />} 
      </mesh>
    </group>
    </>
  )
}

useGLTF.preload('./models/wordmark.gltf')
